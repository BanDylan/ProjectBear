@model ProjectBear.CMS.ViewModels.RosterManagementViewModel

<div>
    @using (Ajax.BeginForm("Roster", "RosterManagement", null, new AjaxOptions { }, new { id = "RosterForm" }))
    {
        //@Html.AntiForgeryToken()
        <h2 style="margin-bottom:20px">Roster Creation</h2>

        <div style="margin-bottom:10px">
            <button style="width:120px; margin-right:10px"  type="button" onclick="AddTimeSlot()">Add Time Slot</button>
            <button style="width:120px;" type="button" onclick="ValidateAndSave(@Model.TimeSlotCount)">Save Roster</button>
        </div>
        <div style="margin-bottom:10px">
            <label>Start date</label>
            @Html.TextBoxFor(m => m.Date, "{0:dd/MM/yyyy HH:mm}", new { id = "Date", type = "text", onchange = "SetDate()" })
            <span class="highlight"></span> <span class="bar"></span>
            <span id="DateValidation" style="display:none" class="field-validation-error text-danger">Enter a date for this roster</span>
        </div>


        <div>
            @for (int i = 0; i < Model.TimeSlots.Count; i++)
            {
                

                <div id="@string.Format("TimeSlot{0}", i)" style="border-radius:6px; margin-bottom:20px; padding:10px; background-color: #dddddd">
                    <div style="position:absolute; float:left; padding:5px">
                        @if (i > 0)
                        {
                            <span id="@string.Format("toggleButton{0}", i)" class="glyphicon glyphicon-remove" onclick="DeleteTimeSlot(@i)" style="cursor: pointer"></span>
                        }
                    </div>
                    <div style="display:inline-block; margin-left:30px">
                        <div>
                            <div>
                                <div>
                                    <label style="width:170px">Game</label>
                                    @Html.TextBoxFor(m => m.TimeSlots[i].GameName, new { id = string.Format("GameName{0}", i), style = "width:300px", type = "text", onblur = string.Format("SetTimeSlotGameName({0})", i) })
                                    <span id="@string.Format("GameNameValidation{0}", i)" style="display:none" class="field-validation-error text-danger">Enter a game for this time slot</span>
                                </div>
                            </div>
                            <div>
                                <div>
                                    <label style="width:170px">Slot Length</label>
                                    @Html.TextBoxFor(m => m.TimeSlots[i].Length, new { id = string.Format("Length{0}", i), style = "width:300px", type = "number", min = "15", onblur = string.Format("SetTimeSlotLength({0})", i) })
                                    <span id="@string.Format("LengthValidation{0}", i)" style="display:none" class="field-validation-error text-danger">Enter a duration for this time slot between 15 and 480 min</span>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div>
                                <div>
                                    <label style="width:170px">Number of Player Slots</label>
                                    @Html.TextBoxFor(m => m.TimeSlots[i].NumberOfPlayers, new { id = string.Format("NumberOfPlayers{0}", i), style = "width:300px", type = "number", min = "1", onblur = string.Format("SetTimeSlotNumberOfPlayers({0})", i) })
                                    <span id="@string.Format("NumberOfPlayersValidation{0}", i)" style="display:none" class="field-validation-error text-danger">Enter the number of player slots for this time slot</span>
                                </div>
                            </div>
                            <div>
                                <div>
                                    <label style="width:170px">Is Steam Game</label>
                                    @Html.CheckBoxFor(m => m.TimeSlots[i].IsSteamGame, new { id = string.Format("IsSteamGame{0}", i), style = "margin-top:2px", onchange = string.Format("SetIsSteamGame({0})", i) })
                                </div>
                            </div>
                        </div>
                    </div>                
                </div>
            }
        </div>
    }
</div>

<link rel="stylesheet" type="text/css" href="~/Content/css/jquery.datetimepicker.min.css" />
<script src="/Scripts/jquery.datetimepicker.full.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#RosterForm").find("#Date").datetimepicker({
            format: 'd/m/Y H:i',  
            step: 15,
            theme: 'dark', 
        });

        $("#RosterForm").find("#Date").on('click', function () {
            $("#RosterForm").find("#Date").datetimepicker('show');
        });
    });

    function SetDate() {
        var value = $('#RosterForm').find('#Date')[0].value;
        $.ajax({
            url: '@Url.Action("SetStartTime", "RosterManagement")',
            type: 'POST',
            data: {
                value: value,
            },
        });
    }

    function AddTimeSlot() {
        $.ajax({
            url: '@Url.Action("AddTimeSlot", "RosterManagement")',
            type: 'POST',
            data: {
            },
            success: function (result) {
                $('#update-body').html(result);
            }
        });
    }

    function DeleteTimeSlot(index) {
        $.ajax({
            url: '@Url.Action("DeleteTimeSlot", "RosterManagement")',
            type: 'POST',
            data: {
                index: index,
            },
            success: function (result) {
                $('#update-body').html(result);
            }
        });
    }

    function SetTimeSlotGameName(i) {
        var value = $('#RosterForm').find('#GameName' + i)[0].value;
        $.ajax({
            url: '@Url.Action("SetTimeSlotGameName", "RosterManagement")',
            type: 'POST',
            data: {
                value: value,
                index: i,
            },
        });
    }

    function SetTimeSlotLength(i) {
        var value = $('#RosterForm').find('#Length' + i)[0].value;
        $.ajax({
            url: '@Url.Action("SetTimeSlotLength", "RosterManagement")',
            type: 'POST',
            data: {
                value: value,
                index: i,
            },
        });
    }

    function SetTimeSlotNumberOfPlayers(i) {
        var value = $('#RosterForm').find('#NumberOfPlayers' + i)[0].value;
        $.ajax({
            url: '@Url.Action("SetTimeSlotPlayerCount", "RosterManagement")',
            type: 'POST',
            data: {
                value: value,
                index: i,
            },
        });
    }

    function SetIsSteamGame(i) {
        var value = $('#RosterForm').find('#IsSteamGame' + i)[0].checked;
        $.ajax({
            url: '@Url.Action("SetIsSteamGame", "RosterManagement")',
            type: 'POST',
            data: {
                value: value,
                index: i,
            },
        });
    }

    function ValidateAndSave(count) {
        var form = $("#RosterForm");
        var isValid = true;

        var date = form.find('#Date')[0].value
        if (/\S/.test(date)) {
            form.find("#DateValidation").hide();
        }
        else {
            isValid = false;
            form.find("#DateValidation").show();
        }

        for (var i = 0; i < count; i++) {

            var gameName = form.find('#GameName' + i)[0].value
            if (/\S/.test(gameName)) {
                form.find("#GameNameValidation" + i).hide();
            }
            else {
                isValid = false;
                form.find("#GameNameValidation" + i).show();
            }


            var length = form.find('#Length' + i)[0].value
            if (length > 15 && length <= 400) {
                form.find("#LengthValidation" + i).hide();
            }
            else {
                isValid = false;
                form.find("#LengthValidation" + i).show();
            }

            var numberOfPlayers = form.find('#NumberOfPlayers' + i)[0].value
            if (numberOfPlayers >= 0) {
                form.find("#NumberOfPlayersValidation" + i).hide();
            }
            else {
                isValid = false;
                form.find("#NumberOfPlayersValidation" + i).show();
            } 
        }

        if (isValid) {
            $.ajax({
                url: '@Url.Action("SaveRoster", "RosterManagement")',
                type: 'POST',
                data: {
                },
                success: function (result) {
                    window.location = "/";
                }
            });
        }
    }


</script>
