@model ProjectBear.CMS.ViewModels.PlayerViewModel

<div>
    @using (Ajax.BeginForm("ViewPlayer", "PlayerManagement", null, new AjaxOptions { }, new { id = "Player" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h2>Player Management</h2>
            <hr />
        </div>
        <div>
            <div style="float:left; margin-right:50px">
                <label style="line-height:1.3; font-size:18px; font-weight:600">Current Steam Name: @Model.CurrentSteamName</label><br />
                <label style="line-height:1.3; font-size:18px; font-weight:600" id="status">Status: @(Model.Banned ? "Banned" : "Active")</label><br />
                <label style="line-height:1.3; font-size:18px; font-weight:600" id="strikeCount">Strikes: @Model.Strikes.Count</label>
            </div>

            <div style="margin-left:50px">
                <button id="addStrike" onclick="@string.Format("DisplayStrikeReasonModal(\"{0}\")", Model.ProfileId);" style="margin-bottom:10px; width:120px" class="btn btn-primary">Add Strike</button><br />
                <button id="banButton" onclick="DisplayConfirmBanModal()" style="margin-bottom:10px; width:120px" class="btn btn-primary">@(Model.Banned ? "Un-ban" : "Ban")</button>
            </div>
        </div>
        <div class="clearfix"></div>

        <div style="float:left">
            <table class="table bordered">
                <tr>
                    <th width="10%">Date Issued</th>
                    <th width="70%">Reason</th>
                </tr>

                @for (int i = 0; i < Model.Strikes.Count; i++)
                {
                    <tr>
                        <td><span id="@string.Format("toggleButton{0}", i)" class="glyphicon glyphicon-minus" onclick="@string.Format("RemoveStrike(\"{0}\")", Model.Strikes[i].ProfileStrikeId);" style="float:left; cursor: pointer; margin-right:5px"></span>@Model.Strikes[i].DateIssued.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>@Model.Strikes[i].Reason</td>
                    </tr>
                }
            </table>

        </div>
        <div class="clearfix"></div>
        <br />
        <h4 style="display:inline-block">Player Names:</h4>
        <div>
            <table class="table bordered">
                @for (int i = 0; i < Math.Ceiling((decimal)Model.PlayerNames.Count / 4); i++)
                {
                    <tr>
                        @for (int j = 0; j < 4; j++)
                        {
                            if (((i * 4) + j) < Model.PlayerNames.Count)
                            {
                                <td width="20%">@Model.PlayerNames[(i * 4) + j].Name</td>
                            }
                            else
                            {
                                <td width="20%"> </td>
                            }
                        }
                    </tr>
                }

            </table>
        </div>

        <h4>Player Bookings:</h4>
        <div>
            @if (Model.GameBookings.Count == 0)
            {
                <Label>Player has never had a booking</Label>
            }
            else
            {
                <table class="table bordered">
                    <tr>

                        <th width="10%">Timeslot Date</th>
                        <th width="10%">Name Used</th>
                        <th width="10%">Game Name</th>
                        <th width="10%">Attendance (Player: @(Model.GameBookings.Count(x => x.DidNotPitch && !x.PromotedFromReserve)), Reserve: @(Model.GameBookings.Count(x => x.DidNotPitch && x.PromotedFromReserve)))</th>
                    </tr>

                    @foreach (var booking in Model.GameBookings)
                    {
                        <tr>
                            <td style="@(booking.Date > DateTime.Now ? "color: #999999" : (booking.DidNotPitch && booking.PromotedFromReserve) ? "color: #FFA500" : (booking.DidNotPitch && !booking.PromotedFromReserve) ? "color: #FF0000" : "")">@booking.Date.ToString("dd/MM/yyyy HH:mm")</td>
                            <td style="@(booking.Date > DateTime.Now ? "color: #999999" : (booking.DidNotPitch && booking.PromotedFromReserve) ? "color: #FFA500" : (booking.DidNotPitch && !booking.PromotedFromReserve) ? "color: #FF0000" : "")">@booking.PlayerName</td>
                            <td style="@(booking.Date > DateTime.Now ? "color: #999999" : (booking.DidNotPitch && booking.PromotedFromReserve) ? "color: #FFA500" : (booking.DidNotPitch && !booking.PromotedFromReserve) ? "color: #FF0000" : "")">@booking.Game</td>
                            <td style="@(booking.Date > DateTime.Now ? "color: #999999" : (booking.DidNotPitch && booking.PromotedFromReserve) ? "color: #FFA500" : (booking.DidNotPitch && !booking.PromotedFromReserve) ? "color: #FF0000" : "")">
                                @((booking.DidNotPitch ? booking.PromotedFromReserve ? "Reserve did not pitch" : "Did not pitch" : ""))
                            </td>
                        </tr>
                    }
                </table>
            }

        </div>

        <div class="modal fade" id="strikeReasonModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        Strike Reason
                    </div>
                    <div class="modal-body">
                        <input id="profileId" type="hidden" />
                        <textarea rows="4" cols="70" placeholder="Please provide a reason for the strike." id="reason" onKeyDown="if (event.keyCode == 13) ValidateStrikeReason(); else ClearStrikeReasonValidation();"></textarea>
                        <br />
                        <span id="strikeReasonValidation" style="display:none" class="field-validation-error text-danger">Reason required</span>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="button" id="confirmName" onclick="ValidateStrikeReason();" class="btn btn-book">Submit</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="confirmBanModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        @(Model.Banned  ? "Confirm Un-ban" : "Confirm Ban")
                    </div>
                    <div class="modal-body">
                        @(Model.Banned ? "Are you sure you wish to un-ban this user?" : "Are you sure you wish to ban this user? All of their existing bookings will be deleted.")

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="button" id="confirmName" onclick="@string.Format("ToggleBan(\"{0}\")", Model.ProfileId);" class="btn btn-book">@(Model.Banned ? "Un-ban" : "Ban")</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    function DisplayConfirmBanModal() {
        var form = $("#Player");
        form.find('#confirmBanModal').modal('show');
    }

    function ToggleBan(profileId) {
        var form = $("#Player");
        form.find('#confirmBanModal').modal('hide');
        
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        $.ajax({
            url: '@Url.Action("ToggleBan", "PlayerManagement")',
            type: 'POST',
            data: {
                __RequestVerificationToken: token,
                profileId: profileId,
            },
            success: function (result) {
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                $('#update-body').html(result);
            }
        });
    }

    function DisplayStrikeReasonModal(profileId) {
        var form = $("#Player");
        form.find('#profileId')[0].value = profileId;
        form.find('#reason')[0].value = "";
        form.find('#strikeReasonValidation').hide();
        form.find('#strikeReasonModal').on('shown.bs.modal', function () {            
            form.find('#reason').focus();
        })
        form.find('#strikeReasonModal').modal('show');
    }

    function ClearStrikeReasonValidation() {
        var form = $("#Player");
        form.find('#strikeReasonValidation').hide();
    }

    function ValidateStrikeReason() {
        var form = $("#Player");
        var reason = form.find('#reason')[0].value;

        if (/\S/.test(reason)) {
            form.find('#strikeReasonModal').modal('hide');
            AddStrike();
        }
        else {
            form.find('#strikeReasonValidation').show();
        }
    }

    function AddStrike() {
        var form = $("#Player");
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var profileId = form.find('#profileId')[0].value
        var reason = form.find('#reason')[0].value;
        form.find('#strikeReasonModal').modal('hide');
        $.ajax({
            url: '@Url.Action("AddStrike", "PlayerManagement")',
            type: 'POST',
            data: {
                __RequestVerificationToken: token,
                profileId: profileId,
                reason: reason,
            },
            success: function (result) {
                $('#update-body').html(result);
            }
        });
    }

    function RemoveStrike(profileStrikeId) {
        var form = $("#Player");
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        $.ajax({
            url: '@Url.Action("RemoveStrike", "PlayerManagement")',
            type: 'POST',
            data: {
                __RequestVerificationToken: token,
                profileStrikeId: profileStrikeId,
            },
            success: function (result) {
                $('#update-body').html(result);
            }
        });
    }

</script>
