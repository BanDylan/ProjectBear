@model List<ProjectBear.Web.Models.RosterViewModel>

@using (Ajax.BeginForm("MyBookings", "Booking", null, new AjaxOptions { }, new { id = "MyBookings" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <input id="minimized" type="hidden" />
        <div class="col-xs-12">
            <h2 style="margin-top:20px; font-weight: 400">My Bookings</h2>
            <div>
                @if(Model.Count == 0)
                {
                    <label style="font-weight: 200; padding-bottom:10px; padding-top:10px">You currently don't have any future bookings.</label>
                }
                @for (int i = 0; i < Model.Count; i++)
                {
                    <div id="@string.Format("ros{0}", i)" class="jumbotron" style="margin-top:40px; padding:20px">
                        <label style="margin-bottom:20px">@Model[i].Date.ToLongDateString()</label>
                        <span id="@string.Format("toggleButton{0}", i)" class="glyphicon glyphicon-minus" onclick="@string.Format("ToggleDisplayRosterTimeSlots(\"{0}\", \"{1}\")", i, Model[i].RosterId);" style="float:right; cursor: pointer"></span>

                        <div id="@string.Format("roster{0}timeslots", i)" style="display: block">
                            @for (int j = 0; j < Model[i].TimeSlots.Count; j++)
                            {
                                <div id="@string.Format("r{0}-ts{1}", i, j)" class="container jumbotron" style="margin-bottom:10px; padding:20px; background-color:#cccccc">
                                    <div style="float:left">
                                        <label style="display: block; line-height: 1">@Model[i].TimeSlots[j].StartTime.ToString("HH:mm") - @Model[i].TimeSlots[j].EndTime.ToString("HH:mm")</label>
                                        <label style="line-height: 1">@Model[i].TimeSlots[j].GameName: </label>
                                        <label style="font-weight: 100; line-height: 1">@(Model[i].TimeSlots[j].NumberOfPlayers == 0 ? "No slots available" : Model[i].TimeSlots[j].Players.Count == Model[i].TimeSlots[j].NumberOfPlayers ? "Fully booked" : Model[i].TimeSlots[j].NumberOfPlayers - Model[i].TimeSlots[j].Players.Count + " player slots remaining (" + Model[i].TimeSlots[j].NumberOfPlayers + " in total)")</label>

                                        <div class="clearfix"></div>
                                        <div id="@string.Format("r{0}ts{1}players", i, j)" style="line-height: 1">
                                            @for (int k = 0; k < Model[i].TimeSlots[j].Players.Count; k++)
                                            {
                                                <label style="line-height: 1; font-size:15px">@Model[i].TimeSlots[j].Players[k].PlayerName</label>
                                            }
                                        </div>
                                    </div>
                                    <div style="float:right">
                                        @if (Model[i].TimeSlots[j].NumberOfPlayers > 0)
                                        {
                                            <div id="@string.Format("r{0}ts{1}bookButtons", i, j)">
                                                <div id="@string.Format("r{0}ts{1}bookPlayerButtons", i, j)" style="margin-bottom:10px">
                                                    <button type="button" onclick="@string.Format("CancelPlayerBooking(\"{0}\")", Model[i].TimeSlots[j].TimeSlotId);" class="btn btn-cancel @(Model[i].TimeSlots[j].IsPlayerBooked ? "" : "hidden")">Cancel Player Slot</button>
                                                </div>
                                                <div id="@string.Format("r{0}ts{1}bookReserveButtons", i, j)">
                                                    <button type="button" onclick="@string.Format("CancelReserveBooking(\"{0}\")", Model[i].TimeSlots[j].TimeSlotId);" class="btn btn-cancel @(Model[i].TimeSlots[j].IsReserveBooked ? "" : "hidden")">Cancel Reserve Slot</button>
                                                </div>
                                            </div>
                                            <div class="clearfix"></div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="modal fade" id="playerCancelledModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Success!
                </div>
                <div class="modal-body">
                    Your booking has been cancelled. 
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="reserveCancelledModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Success!
                </div>
                <div class="modal-body">
                    You have been removed from this time slot's reserves.
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="bookingErrorModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Oh dear!
                </div>
                <div class="modal-body">
                    <span id="bookingErrorText"></span>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        var form = $("#MyBookings");
        var url = new URL(window.location.href);
        var modalParam = url.searchParams.get("modal");
        var minParam = url.searchParams.get("minimized");
        if (minParam != null) {
            form.find('#minimized')[0].value = minParam;
            var rosters = @Html.Raw(Json.Encode(Model));
            for (var i = 0; i < rosters.length; i++) {
                if (minParam.includes(rosters[i].RosterId)) {
                    form.find('#roster' + i + 'timeslots')[0].style.display = "none";
                    var toggleButton = form.find('#toggleButton' + i);
                    toggleButton[0].classList.remove('glyphicon-minus');
                    toggleButton[0].classList.add('glyphicon-plus');
                }
            }
        }

        window.history.replaceState({}, document.title, "/Booking/MyBookings/");
        var form = $("#MyBookings");
        if (modalParam != null) {
            if (modalParam.toLowerCase() == "playercancellationsuccess") {
                form.find('#playerCancelledModal').modal('show');
            }
            if (modalParam.toLowerCase() == "reservecancellationsuccess") {
                form.find('#reserveCancelledModal').modal('show');
            }
        }
    });
 
    function CancelPlayerBooking(timeSlotId) {
        var form = $("#MyBookings");
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        $.ajax({
            url: '@Url.Action("CancelPlayerBooking", "Booking")',
            type: 'POST',
            data: {
                __RequestVerificationToken: token,
                timeSlotId: timeSlotId,
            },
            success: function (response) {
                if (response.toLowerCase() == "success") {
                    var minimized = form.find('#minimized')[0].value;
                    var minParam = "";
                    if (minimized.length > 0)
                        minParam = "&minimized=" + minimized;
                    window.history.replaceState({}, document.title, "/Booking/MyBookings/?modal=playercancellationsuccess" + minParam);
                    location.reload();
                }
                else {
                    form.find('#bookingErrorText')[0].textContent = response;
                    form.find('#bookingErrorModal').modal('show');
                }
            }
        });
    }

    function CancelReserveBooking(timeSlotId) {
        var form = $("#MyBookings");
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        $.ajax({
            url: '@Url.Action("CancelReserveBooking", "Booking")',
            type: 'POST',
            data: {
                __RequestVerificationToken: token,
                timeSlotId: timeSlotId,
            },
            success: function (response) {
                if (response.toLowerCase() == "success") {
                    var minimized = form.find('#minimized')[0].value;
                    var minParam = "";
                    if (minimized.length > 0)
                        minParam = "&minimized=" + minimized;
                    window.history.replaceState({}, document.title, "/Booking/MyBookings/?modal=reservecancellationsuccess" + minParam);
                    location.reload();
                }
                else {
                    form.find('#bookingErrorText')[0].textContent = response;
                    form.find('#bookingErrorModal').modal('show');
                }
            }
        });
    }

    function ToggleDisplayRosterTimeSlots(i, rosterId) {
        var form = $("#MyBookings");
        var timeSlot = form.find('#roster' + i + 'timeslots');
        var toggleButton = form.find('#toggleButton' + i);
        timeSlot.slideToggle(500, function () {
            var minimized = form.find('#minimized')[0];
            if (timeSlot[0].style.display == "none") {
                minimized.value = minimized.value + rosterId + "|";
                toggleButton[0].classList.remove('glyphicon-minus');
                toggleButton[0].classList.add('glyphicon-plus');
            }
            else {
                minimized.value = minimized.value.replace(rosterId + "|", "");
                toggleButton[0].classList.remove('glyphicon-plus');
                toggleButton[0].classList.add('glyphicon-minus');
            }
        });
    }

</script>



